import 'package:flutter/material.dart';
import 'package:promptme/core/theme/theme_color.dart';

final ThemeData myTheme = ThemeData(
  cardTheme: const CardTheme(
    shadowColor: Color(0x4D9E9E9E),
    elevation: 4,
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
  ),
  brightness: Brightness.light,
  primaryColor: const Color(0xff2b2e41),
  primaryColorLight: const Color(0xffe0e2eb),
  primaryColorDark: const Color(0xff2b2e42),
  canvasColor: const Color(0xfff8f8fa),
  scaffoldBackgroundColor: const Color(0xfff8f8fa),
  bottomAppBarColor: const Color(0xffffffff),
  cardColor: const Color(0xffffffff),
  dividerColor: const Color(0xffe1e1e4),
  highlightColor: const Color(0x66bcbcbc),
  splashColor: const Color(0x66c8c8c8),
  selectedRowColor: const Color(0xfff8f8fa),
  unselectedWidgetColor: const Color(0xffc2c2c8),
  disabledColor: const Color(0xffe3e3e3),
  toggleableActiveColor: const Color(0xffE20917),
  secondaryHeaderColor: const Color(0xffffffff),
  backgroundColor: const Color(0xfff8f8fa),
  dialogBackgroundColor: const Color(0xffffffff),
  indicatorColor: const Color(0xffccd0dc),
  hintColor: const Color(0xff6c6c6c),
  errorColor: const Color(0xffE20917),
  buttonTheme: ButtonThemeData(
    textTheme: ButtonTextTheme.primary,
    padding: const EdgeInsets.only(left: 20, right: 20),
    shape: const StadiumBorder(),
    buttonColor: const Color(0xffE20917),
    disabledColor: const Color(0xffe3e3e3),
    highlightColor: const Color(0x00000000),
    splashColor: const Color(0xff000000).withOpacity(0.122),
    focusColor: const Color(0xff000000).withOpacity(0.122),
    hoverColor: const Color(0xff000000).withOpacity(0.039),
    colorScheme: const ColorScheme(
      primary: Color(0xff2b2e42),
      primaryContainer: Color(0xff3d415c),
      secondary: Color(0xffE20917),
      secondaryContainer: Color(0xff3d415c),
      surface: Color(0xffffffff),
      background: Color(0xffc2c4d6),
      error: Color(0xffE20917),
      onPrimary: Color(0xffffffff),
      onSecondary: Color(0xffffffff),
      onSurface: Color(0xff000000),
      onBackground: Color(0xffffffff),
      onError: Color(0xffffffff),
      brightness: Brightness.light,
    ),
  ),
  tooltipTheme: const TooltipThemeData(
    padding: EdgeInsets.all(12),
    textStyle: TextStyle(
      color: white,
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  textTheme: const TextTheme(
    headline1: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 96,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline2: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 60,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline3: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 34,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline4: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 28,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline5: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 24,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline6: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 20,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    subtitle1: TextStyle(
      color: inputHintColor,
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    subtitle2: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText1: TextStyle(
      color: Color(0xff484c5d),
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText2: TextStyle(
      color: Color(0xff484c5d),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    caption: TextStyle(
      color: Color(0xff989899),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    button: TextStyle(
      color: Color(0xffE20917),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    overline: TextStyle(
      color: Color(0xff989899),
      fontSize: 10,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  primaryTextTheme: TextTheme(
    headline1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 96,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 60,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline3: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 34,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline4: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 28,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline5: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 24,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline6: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 20,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    subtitle1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    subtitle2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    caption: TextStyle(
      color: const Color(0xffffffff).withOpacity(0.702),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    button: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    overline: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 10,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  inputDecorationTheme: const InputDecorationTheme(
    labelStyle: TextStyle(
      color: Color(0xff6c6c6c),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    helperStyle: TextStyle(
      color: Color(0xff6c6c6c),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    hintStyle: TextStyle(
      color: Color(0xff6c6c6c),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    errorStyle: TextStyle(
      color: Color(0xffE20917),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    errorMaxLines: 1,
    contentPadding: EdgeInsets.only(top: 12, bottom: 12, left: 12, right: 12),
    prefixStyle: TextStyle(
      color: Color(0xff484c5d),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    suffixStyle: TextStyle(
      color: Color(0xff484c5d),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    counterStyle: TextStyle(
      color: Color(0xff484c5d),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    filled: true,
    focusColor: white,
    hoverColor: white,
    fillColor: white,
    errorBorder: OutlineInputBorder(
      borderSide: BorderSide(color: primary),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    focusedBorder: OutlineInputBorder(
      borderSide: BorderSide(color: greyBorder),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    focusedErrorBorder: OutlineInputBorder(
      borderSide: BorderSide(color: primary),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    disabledBorder: InputBorder.none,
    enabledBorder: OutlineInputBorder(
      borderSide: BorderSide(color: greyBorder),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    border: InputBorder.none,
  ),
  iconTheme: const IconThemeData(
    color: Color(0xff2b2e42),
    opacity: 1,
    size: 24,
  ),
  primaryIconTheme: const IconThemeData(
    color: Color(0xffffffff),
    opacity: 1,
    size: 24,
  ),
  elevatedButtonTheme: ElevatedButtonThemeData(
    style: ButtonStyle(
      backgroundColor: MaterialStateProperty.all(const Color(0xffe20917)),
    ),
  ),
  sliderTheme: const SliderThemeData(
    activeTrackColor: Color(0xffE20917),
    inactiveTrackColor: Color(0xffe7e7ea),
    disabledActiveTrackColor: Color(0xcc2b2e42),
    disabledInactiveTrackColor: Color(0xcce7e7ea),
    activeTickMarkColor: Color(0xffE20917),
    inactiveTickMarkColor: Color(0xffffffff),
    disabledActiveTickMarkColor: Color(0xcc2b2e42),
    disabledInactiveTickMarkColor: Color(0xcce7e7ea),
    thumbColor: Color(0xffE20917),
    disabledThumbColor: Color(0xccE20917),
    thumbShape: RoundSliderThumbShape(
      enabledThumbRadius: 9,
      pressedElevation: 8,
    ),
    overlayColor: Color(0xfff9c8cb),
    valueIndicatorColor: Color(0xff2b2e42),
    valueIndicatorShape: PaddleSliderValueIndicatorShape(),
    showValueIndicator: ShowValueIndicator.always,
    valueIndicatorTextStyle: TextStyle(
      color: Color(0xffffffff),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  tabBarTheme: const TabBarTheme(
    indicatorSize: TabBarIndicatorSize.tab,
    labelColor: Color(0xffffffff),
    unselectedLabelColor: Color(0xffEEEEF0),
  ),
  chipTheme: const ChipThemeData(
    backgroundColor: Color(0xffabafbe),
    brightness: Brightness.light,
    deleteIconColor: Color(0xffE20917),
    disabledColor: Color(0xffe1e3e8),
    labelPadding: EdgeInsets.only(left: 8, right: 8),
    labelStyle: TextStyle(
      color: Color(0xffffffff),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    padding: EdgeInsets.only(top: 4, bottom: 4, left: 4, right: 4),
    secondaryLabelStyle: TextStyle(
      color: Color(0xff2b2e42),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    secondarySelectedColor: Color(0xfff9c8ca),
    selectedColor: Color(0xff2b2e42),
    shape: StadiumBorder(),
  ),
  dialogTheme: const DialogTheme(
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.all(Radius.circular(20)),
    ),
  ),
  colorScheme: ColorScheme.fromSwatch(
    primarySwatch: const MaterialColor(4281019969, {
      50: Color(0xfff0f0f5),
      100: Color(0xffe0e2eb),
      200: Color(0xffc2c4d6),
      300: Color(0xffa3a7c2),
      400: Color(0xff848aae),
      500: Color(0xff666d99),
      600: Color(0xff51577b),
      700: Color(0xff3d415c),
      800: Color(0xff292b3d),
      900: Color(0xff14161f)
    }),
  ).copyWith(secondary: const Color(0xffE20917)),
  textSelectionTheme: const TextSelectionThemeData(
    cursorColor: Color(0xffE20917),
    selectionColor: Color(0xffc2c4d6),
    selectionHandleColor: Color(0xffa3a7c2),
  ),
);

final ThemeData myDarktheme = myTheme.copyWith(
  brightness: Brightness.dark,
  canvasColor: const Color(0xff2c2c2c),
  scaffoldBackgroundColor: const Color(0xff2c2c2c),
  bottomAppBarColor: const Color.fromARGB(255, 22, 22, 22),
  cardColor: const Color(0xff383838),
  dividerColor: const Color(0xff525252),
  backgroundColor: const Color(0xff2c2c2c),
  dialogBackgroundColor: const Color(0xff000000),
  hintColor: const Color(0xffb8b8b8),
  buttonTheme: ButtonThemeData(
    textTheme: ButtonTextTheme.primary,
    padding: const EdgeInsets.only(left: 20, right: 20),
    shape: const StadiumBorder(
      side: BorderSide(
        color: Color(0xffffffff),
        width: 0,
        style: BorderStyle.none,
      ),
    ),
    buttonColor: const Color(0xffE20917),
    disabledColor: const Color(0xff494C5D),
    highlightColor: const Color(0xffe3e3e3),
    splashColor: const Color(0xffffffff).withOpacity(0.122),
    focusColor: const Color(0xffffffff).withOpacity(0.122),
    hoverColor: const Color(0xffffffff).withOpacity(0.039),
    colorScheme: const ColorScheme(
      primary: Color(0xff2b2e42),
      primaryContainer: Color(0xff3d415c),
      secondary: Color(0xffE20917),
      secondaryContainer: Color(0xff3d415c),
      surface: Color(0xff000000),
      background: Color(0xffc2c4d6),
      error: Color(0xffE20917),
      onPrimary: Color(0xffffffff),
      onSecondary: Color(0xffE20917),
      onSurface: Color(0xff000000),
      onBackground: Color(0xffc2c4d6),
      onError: Color(0xffE20917),
      brightness: Brightness.dark,
    ),
  ),
  textTheme: TextTheme(
    headline1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 96,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 60,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline3: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 34,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline4: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 28,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline5: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 24,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline6: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 20,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    subtitle1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    subtitle2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    caption: TextStyle(
      color: const Color(0xffffffff).withOpacity(0.702),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    button: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    overline: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 10,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  primaryTextTheme: TextTheme(
    headline1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 96,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 60,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline3: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 34,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline4: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 28,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline5: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 24,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    headline6: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 20,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Montserrat',
    ),
    subtitle1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    subtitle2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText1: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 16,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    bodyText2: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    caption: TextStyle(
      color: const Color(0xffffffff).withOpacity(0.702),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    button: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    overline: const TextStyle(
      color: Color(0xffffffff),
      fontSize: 10,
      fontWeight: FontWeight.w700,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  inputDecorationTheme: const InputDecorationTheme(
    labelStyle: TextStyle(
      color: Color(0xffffffff),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    helperStyle: TextStyle(
      color: Color(0xffffffff),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    hintStyle: TextStyle(
      color: Color(0xffb8b8b8),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    errorStyle: TextStyle(
      color: Color(0xffE20917),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontFamily: 'Roboto',
    ),
    errorMaxLines: 1,
    contentPadding: EdgeInsets.only(top: 12, bottom: 12, left: 12, right: 12),
    prefixStyle: TextStyle(
      color: Color(0xff959fc2),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    suffixStyle: TextStyle(
      color: Color(0xff959fc2),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    counterStyle: TextStyle(
      color: Color(0xff959fc2),
      fontSize: 14,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    filled: true,
    focusColor: white,
    hoverColor: white,
    fillColor: white,
    errorBorder: OutlineInputBorder(
      borderSide: BorderSide(color: Color(0xffE20917)),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    focusedBorder: OutlineInputBorder(
      borderSide: BorderSide(color: white),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    focusedErrorBorder: OutlineInputBorder(
      borderSide: BorderSide(color: Color(0xffE20917)),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    disabledBorder: InputBorder.none,
    enabledBorder: OutlineInputBorder(
      borderSide: BorderSide(color: grey2),
      borderRadius: BorderRadius.all(Radius.circular(8)),
    ),
    border: InputBorder.none,
  ),
  iconTheme: const IconThemeData(
    color: Color(0xffffffff),
    opacity: 1,
    size: 24,
  ),
  primaryIconTheme: const IconThemeData(
    color: Color(0xff2b2e42),
    opacity: 1,
    size: 24,
  ),
  elevatedButtonTheme: ElevatedButtonThemeData(
    style: ButtonStyle(
      backgroundColor: MaterialStateProperty.all(const Color(0xffe20917)),
    ),
  ),
  sliderTheme: const SliderThemeData(
    activeTrackColor: Color(0xffE20917),
    inactiveTrackColor: Color(0xff2b2e42),
    disabledActiveTrackColor: Color(0xcce7e7ea),
    disabledInactiveTrackColor: Color(0xcc2b2e42),
    activeTickMarkColor: Color(0xffE20917),
    inactiveTickMarkColor: Color(0xffffffff),
    disabledActiveTickMarkColor: Color(0xcce7e7ea),
    disabledInactiveTickMarkColor: Color(0xcc2b2e42),
    thumbColor: Color(0xffE20917),
    disabledThumbColor: Color(0xccE20917),
    thumbShape: RoundSliderThumbShape(
      enabledThumbRadius: 9,
      pressedElevation: 8,
    ),
    overlayColor: Color(0xfff9c8cb),
    valueIndicatorColor: Color(0xcce7e7ea),
    valueIndicatorShape: PaddleSliderValueIndicatorShape(),
    showValueIndicator: ShowValueIndicator.always,
    valueIndicatorTextStyle: TextStyle(
      color: Color(0xff000000),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
  ),
  tabBarTheme: const TabBarTheme(
    indicatorSize: TabBarIndicatorSize.tab,
    labelColor: Color(0xff000000),
    unselectedLabelColor: Color(0xff494C5D),
  ),
  chipTheme: const ChipThemeData(
    backgroundColor: Color(0xffabafbe),
    brightness: Brightness.dark,
    deleteIconColor: Color(0xffE20917),
    disabledColor: Color(0xff494C5D),
    labelPadding: EdgeInsets.only(left: 8, right: 8),
    labelStyle: TextStyle(
      color: Color(0xffffffff),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    padding: EdgeInsets.only(top: 4, bottom: 4, left: 4, right: 4),
    secondaryLabelStyle: TextStyle(
      color: Color(0xffF8F8FA),
      fontSize: 12,
      fontWeight: FontWeight.w400,
      fontStyle: FontStyle.normal,
      fontFamily: 'Roboto',
    ),
    secondarySelectedColor: Color(0xfff9c8ca),
    selectedColor: Color(0xffF8F8FA),
    shape: StadiumBorder(),
  ),
  dialogTheme: const DialogTheme(
    shape: RoundedRectangleBorder(
      borderRadius: BorderRadius.all(Radius.circular(20)),
    ),
  ),
  colorScheme: ColorScheme.fromSwatch(
    primarySwatch: const MaterialColor(4281019969, {
      50: Color(0xfff0f0f5),
      100: Color(0xffe0e2eb),
      200: Color(0xffc2c4d6),
      300: Color(0xffa3a7c2),
      400: Color(0xff848aae),
      500: Color(0xff666d99),
      600: Color(0xff51577b),
      700: Color(0xff3d415c),
      800: Color(0xff292b3d),
      900: Color(0xff14161f)
    }),
  ).copyWith(secondary: const Color(0xffE20917)),
  textSelectionTheme: const TextSelectionThemeData(
    cursorColor: Color(0xffE20917),
    selectionColor: Color(0xffc2c4d6),
    selectionHandleColor: Color(0xffa3a7c2),
  ),
);
